<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Gurpreet Singh</title>
 <link href="http://gsinghware.github.io/atom.xml" rel="self"/>
 <link href="http://gsinghware.github.io/"/>
 <updated>2016-03-17T14:46:48-04:00</updated>
 <id>http://gsinghware.github.io</id>
 <author>
   <name>Gurpreet Singh</name>
 </author>
 
 
   
   <entry>
     <title>Symmetric and Asymmetric Encryption</title>
     <link href="http://gsinghware.github.io/posts/Symmetric-And-Asymmetric-Encryption"/>
     <updated>2016-03-17T00:00:00-04:00</updated>
     <id>http://gsinghware.github.io/posts/Symmetric-And-Asymmetric-Encryption</id>
     <content type="html">&lt;p&gt;Information can be encrypted using symmetrical (AKA shared key or shared secret encryption) or asymmetrical schemes (AKA public-key cryptography).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Symmetric Encryption&lt;/strong&gt; - In symmetrical encryption, the information is encrypted and decrypted using the same key. Anyone who holds the key can encrypt and decrypt messages and send them to anyone else who has the key. Algorithms that use symmetric encryption are Blowfish, Twofish, DES, 3DES, AES, and RC4.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Asymmetric Encryption&lt;/strong&gt; - In asymmetrical encryption, the information is encrypted using a public key and decrypted using the private key. There is mathematical relationship between the public and the private key. The public key is shared with everyone and it reveals no information about the private key. The private key is kept in secret and whoever holds this key can decrypt the messages encrypted using the public key. Algorithms that use asymmetric encryption are: RSA, El Gamel, Diffie-Hellman Key Exchange and more…&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you have any questions, follow and ping me on Twitter - I’m &lt;a href=&quot;https://twitter.com/_g_singh_&quot;&gt;@&lt;em&gt;g_singh&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;!-- You&#39;ll want to [get the code][left] and read the README to learn how to
install and set up Left for your own purposes.

If you have any questions, follow and ping me on Twitter- I&#39;m
[@holman][twitter].

[jekyll]: https://github.com/mojombo/jekyll
[zh]: http://zachholman.com
[left]: https://github.com/holman/left#readme --&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>How SSH works</title>
     <link href="http://gsinghware.github.io/posts/How-SSH-Works"/>
     <updated>2016-03-16T00:00:00-04:00</updated>
     <id>http://gsinghware.github.io/posts/How-SSH-Works</id>
     <content type="html">&lt;p&gt;I’ll be talking about SSH or secure-shell today. SSH is a Internet protocol. It’s a set of rules specifying how two computers securely communicate over an unsecure network, like the internet. It’s widely used for system administration, such as performing software updates or software deployment on Unix/Linux machines.&lt;/p&gt;

&lt;p&gt;SSH is based on Server/Client Architecture. SSH Server program must be installed on the remote computer and SSH client program must be installed on your computer.&lt;/p&gt;

&lt;p&gt;When you use SSH, you have access to the terminal screen/command line of the remote server computer. Here is a list of SSH clients that you use to set-up connection to the SSH server:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://2.bp.blogspot.com/-wDtfx8AKLFI/VuovT8wt-aI/AAAAAAAACbk/-vlfF7YShUU0ioLYrEi9ZvKiFKzEX844g/s320/SSH-OS-Clients.png&quot; alt=&quot;alt text&quot; title=&quot;SSH OS Clients&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The SSH Protocol mainly consists of three components. &lt;strong&gt;Authentication, Encryption and Integrity&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;User authentication&lt;/strong&gt; – A way for system to identify users who are given or denied access the server. Access is either controlled through username and password set-up by an administrator on the remote server, or a cryptographic key generated by the user and shared with the server. Using a key-based access is more common, and you might already be familiar with this if you use github/bitbucket for version control of your software.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Data encryption&lt;/strong&gt; – Data is encrypted such is it is garbage for everyone except for the intended recipients.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Data Integrity&lt;/strong&gt; – This is guarantee that no one can modify information being sent from sender to receiver.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;SSH Features&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Secure Remote Logins&lt;/strong&gt; - SSH allows secure remote login to the server by using an encrypted connection by using a ssh client program that authenticates you to the remote computer’s SSH server. This means your username and password are encrypted locally first and then they are transmitted. If authenticated successfully, any packets which follow are encrypted using the SSH protocol.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Secure File Transfer&lt;/strong&gt; – Using SSH, a file that may contain sensitive information can be transmitted securely between machines with scp command.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Remotely execute commands&lt;/strong&gt; - Using the SSH connection, you can execute commands externally on the remote server computer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Port Forwarding&lt;/strong&gt; - SSH can secure other unsecure TCP/IP protocols such as FTP, telnet using port forwarding techniques. For example one can use telnet protocol over SSH connection.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;SSH Encryption and Connection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To establish a connection with the SSH server, the SSH client begins with a TCP (Transmission Control Protocol) handshake. The diagram below shows the process of TCP handshake:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://4.bp.blogspot.com/-TtdPdAgpl6Q/VurepyZUtqI/AAAAAAAACb4/Ha9spm2FY34anF2n59BGLgHcUCD_NVTjA/s1600/tcp-handshake.png&quot; alt=&quot;alt text&quot; title=&quot;TCP Handshake&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After the connection is established, both the client and server agree on public parameters and generate their own private key and use the Diffie-Hellman Key Exchange algorithm to establish a session-key. See diffie-hellman algorithm. This session-key will be used to ecrypt the entire session.&lt;/p&gt;

&lt;p&gt;After the session-key is established, the user authentication will begin. The user authentication can be done using passwords or using SSH key pairs as metioned earlier in the SSH features section.&lt;/p&gt;

&lt;p&gt;If you use password authenctication, the server will prompt the client for the password of the account they try to access. The password is encrypted by the client and sent. Once recieved by the server, it decrypts the password and verifies it. If the password is correct, then the client is given access to the account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connecting to a SSH server from Mac OS X or Unix or Linux with username and password authentication&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mac OS X and Linux both come with an SSH client built in. For this tutorial, I’ll be connecting to a virtual machine using SSH from my computer. I have intalled Ubuntu on a Virtual Machine and I’m using port forwarding to be able to SSH into the VM. To do this, Go into you Virtual Machines Settings and Open the Network tab. You should a button that says “Port Forwarding”. See image below&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://3.bp.blogspot.com/-xcAhcN-WVN8/VurvAZCIhPI/AAAAAAAACcU/oiYxZ0cmv3koWoerMSJRibOrRTXDegdbQ/s320/VM-Port-Forwarding.png&quot; alt=&quot;alt text&quot; title=&quot;VM Port Forwarding&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the Add new port icon and enter the following information:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://3.bp.blogspot.com/-Erj1eMxs5mE/VurvAawyHOI/AAAAAAAACcY/7NqADMow6T8TdC2fv567hFGBjI1sx-QYg/s320/VM-SSH-.png&quot; alt=&quot;alt text&quot; title=&quot;VM SSH&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And that’s all you have to do to SSH into the Virtual Machine.&lt;/p&gt;

&lt;p&gt;Also install the OpenSSH-Server using the following command on your Virtual Machine:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo apt-get install openssh-server&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once you have installed the server on the virutal machine, follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Get the IP address of your virtual machine server. Type the following in your terminal&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;ifconfig&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You should get the following screen:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://2.bp.blogspot.com/-UUJwkjxwM-s/VurzA327KjI/AAAAAAAACck/dc9wjxQsmisCmtZ38GZfNJDzyrervLRjw/s320/ifconfig.png&quot; alt=&quot;alt text&quot; title=&quot;ifconfig&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To be continued…&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Type the following command:&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Connecting to a SSH server on Unix/Linux with key authenticationg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Potential Attacks by Hackers&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you have any questions, follow and ping me on Twitter - I’m &lt;a href=&quot;https://twitter.com/_g_singh_&quot;&gt;@&lt;em&gt;g_singh&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;!-- You&#39;ll want to [get the code][left] and read the README to learn how to
install and set up Left for your own purposes.

If you have any questions, follow and ping me on Twitter- I&#39;m
[@holman][twitter].

[jekyll]: https://github.com/mojombo/jekyll
[zh]: http://zachholman.com
[left]: https://github.com/holman/left#readme --&gt;
</content>
   </entry>
   
 
   
   <entry>
     <title>First Post</title>
     <link href="http://gsinghware.github.io/posts/left"/>
     <updated>2016-01-26T00:00:00-05:00</updated>
     <id>http://gsinghware.github.io/posts/left</id>
     <content type="html">&lt;p&gt;I’m just testing this first post.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If you have any questions, follow and ping me on Twitter - I’m &lt;a href=&quot;https://twitter.com/_g_singh_&quot;&gt;@&lt;em&gt;g_singh&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;!-- You&#39;ll want to [get the code][left] and read the README to learn how to
install and set up Left for your own purposes.

If you have any questions, follow and ping me on Twitter- I&#39;m
[@holman][twitter].

[jekyll]: https://github.com/mojombo/jekyll
[zh]: http://zachholman.com
[left]: https://github.com/holman/left#readme --&gt;
</content>
   </entry>
   
 
   
 
 
</feed>
